1. How many PODs exist on the system? In the current(default) namespace.

controlplane ~ ➜  kubectl get pods
No resources found in default namespace.

=> 0

===========================================================

2. How many ReplicaSets exist on the system? In the current(default) namespace.

controlplane ~ ➜  kubectl get replicasets
No resources found in default namespace.

=> 0

===========================================================

3. How many Deployments exist on the system? In the current(default) namespace.

controlplane ~ ➜  kubectl get deployments
No resources found in default namespace.

=> 0
===========================================================

4. How many Deployments exist on the system now?
We just created a Deployment! Check again!

controlplane ~ ➜  kubectl get deployments
NAME                  READY   UP-TO-DATE   AVAILABLE   AGE
frontend-deployment   0/4     4            0           18s

=> 1

===========================================================

5. How many ReplicaSets exist on the system now?

controlplane ~ ➜  kubectl get replicasets
NAME                             DESIRED   CURRENT   READY   AGE
frontend-deployment-7b9984b987   4         4         0       48s

=> 1

===========================================================

6. How many PODs exist on the system now?

controlplane ~ ➜  kubectl get pods
NAME                                   READY   STATUS             RESTARTS   AGE
frontend-deployment-7b9984b987-8vlkm   0/1     ImagePullBackOff   0          91s
frontend-deployment-7b9984b987-fdnht   0/1     ImagePullBackOff   0          91s
frontend-deployment-7b9984b987-xl9b6   0/1     ImagePullBackOff   0          91s
frontend-deployment-7b9984b987-4n5gq   0/1     ImagePullBackOff   0          91s

=> 4

===========================================================

7. Out of all the existing PODs, how many are ready?

=> 0

===========================================================

8. What is the image used to create the pods in the new deployment?

controlplane ~ ➜  kubectl describe pods 
Name:             frontend-deployment-7b9984b987-xl9b6
Namespace:        default
Priority:         0
Service Account:  default
Node:             controlplane/192.7.181.3
Start Time:       Tue, 30 Apr 2024 04:59:47 +0000
Labels:           name=busybox-pod
                  pod-template-hash=7b9984b987
Annotations:      <none>
Status:           Pending
IP:               10.42.0.9
IPs:
  IP:           10.42.0.9
Controlled By:  ReplicaSet/frontend-deployment-7b9984b987
Containers:
  busybox-container:
    Container ID:  
    Image:         busybox888
    Image ID:      
    Port:          <none>
    Host Port:     <none>
    Command:
      sh
      -c
      echo Hello Kubernetes! && sleep 3600
    State:          Waiting
      Reason:       ImagePullBackOff
    Ready:          False
    Restart Count:  0
    Environment:    <none>
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-v4bqv (ro)
Conditions:
  Type                        Status
  PodReadyToStartContainers   True 
  Initialized                 True 
  Ready                       False 
  ContainersReady             False 
  PodScheduled                True 
Volumes:
  kube-api-access-v4bqv:
    Type:                    Projected (a volume that contains injected data from multiple sources)
    TokenExpirationSeconds:  3607
    ConfigMapName:           kube-root-ca.crt
    ConfigMapOptional:       <nil>
    DownwardAPI:             true
QoS Class:                   BestEffort
Node-Selectors:              <none>
Tolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
Events:
  Type     Reason     Age                  From               Message
  ----     ------     ----                 ----               -------
  Normal   Scheduled  2m33s                default-scheduler  Successfully assigned default/frontend-deployment-7b9984b987-xl9b6 to controlplane
  Normal   Pulling    64s (x4 over 2m33s)  kubelet            Pulling image "busybox888"
  Warning  Failed     63s (x4 over 2m32s)  kubelet            Failed to pull image "busybox888": failed to pull and unpack image "docker.io/library/busybox888:latest": failed to resolve reference "docker.io/library/busybox888:latest": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed
  Warning  Failed     63s (x4 over 2m32s)  kubelet            Error: ErrImagePull
  Warning  Failed     41s (x6 over 2m32s)  kubelet            Error: ImagePullBackOff
  Normal   BackOff    30s (x7 over 2m32s)  kubelet            Back-off pulling image "busybox888"


Name:             frontend-deployment-7b9984b987-fdnht
Namespace:        default
Priority:         0
Service Account:  default
Node:             controlplane/192.7.181.3
Start Time:       Tue, 30 Apr 2024 04:59:47 +0000
Labels:           name=busybox-pod
                  pod-template-hash=7b9984b987
Annotations:      <none>
Status:           Pending
IP:               10.42.0.12
IPs:
  IP:           10.42.0.12
Controlled By:  ReplicaSet/frontend-deployment-7b9984b987
Containers:
  busybox-container:
    Container ID:  
    Image:         busybox888
    Image ID:      
    Port:          <none>
    Host Port:     <none>
    Command:
      sh
      -c
      echo Hello Kubernetes! && sleep 3600
    State:          Waiting
      Reason:       ImagePullBackOff
    Ready:          False
    Restart Count:  0
    Environment:    <none>
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-x2z8x (ro)
Conditions:
  Type                        Status
  PodReadyToStartContainers   True 
  Initialized                 True 
  Ready                       False 
  ContainersReady             False 
  PodScheduled                True 
Volumes:
  kube-api-access-x2z8x:
    Type:                    Projected (a volume that contains injected data from multiple sources)
    TokenExpirationSeconds:  3607
    ConfigMapName:           kube-root-ca.crt
    ConfigMapOptional:       <nil>
    DownwardAPI:             true
QoS Class:                   BestEffort
Node-Selectors:              <none>
Tolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
Events:
  Type     Reason     Age                  From               Message
  ----     ------     ----                 ----               -------
  Normal   Scheduled  2m33s                default-scheduler  Successfully assigned default/frontend-deployment-7b9984b987-fdnht to controlplane
  Normal   Pulling    66s (x4 over 2m33s)  kubelet            Pulling image "busybox888"
  Warning  Failed     65s (x4 over 2m32s)  kubelet            Failed to pull image "busybox888": failed to pull and unpack image "docker.io/library/busybox888:latest": failed to resolve reference "docker.io/library/busybox888:latest": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed
  Warning  Failed     65s (x4 over 2m32s)  kubelet            Error: ErrImagePull
  Warning  Failed     52s (x6 over 2m31s)  kubelet            Error: ImagePullBackOff
  Normal   BackOff    40s (x7 over 2m31s)  kubelet            Back-off pulling image "busybox888"


Name:             frontend-deployment-7b9984b987-4n5gq
Namespace:        default
Priority:         0
Service Account:  default
Node:             controlplane/192.7.181.3
Start Time:       Tue, 30 Apr 2024 04:59:47 +0000
Labels:           name=busybox-pod
                  pod-template-hash=7b9984b987
Annotations:      <none>
Status:           Pending
IP:               10.42.0.11
IPs:
  IP:           10.42.0.11
Controlled By:  ReplicaSet/frontend-deployment-7b9984b987
Containers:
  busybox-container:
    Container ID:  
    Image:         busybox888
    Image ID:      
    Port:          <none>
    Host Port:     <none>
    Command:
      sh
      -c
      echo Hello Kubernetes! && sleep 3600
    State:          Waiting
      Reason:       ImagePullBackOff
    Ready:          False
    Restart Count:  0
    Environment:    <none>
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-pgxr2 (ro)
Conditions:
  Type                        Status
  PodReadyToStartContainers   True 
  Initialized                 True 
  Ready                       False 
  ContainersReady             False 
  PodScheduled                True 
Volumes:
  kube-api-access-pgxr2:
    Type:                    Projected (a volume that contains injected data from multiple sources)
    TokenExpirationSeconds:  3607
    ConfigMapName:           kube-root-ca.crt
    ConfigMapOptional:       <nil>
    DownwardAPI:             true
QoS Class:                   BestEffort
Node-Selectors:              <none>
Tolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
Events:
  Type     Reason     Age                  From               Message
  ----     ------     ----                 ----               -------
  Normal   Scheduled  2m33s                default-scheduler  Successfully assigned default/frontend-deployment-7b9984b987-4n5gq to controlplane
  Normal   Pulling    63s (x4 over 2m33s)  kubelet            Pulling image "busybox888"
  Warning  Failed     62s (x4 over 2m32s)  kubelet            Failed to pull image "busybox888": failed to pull and unpack image "docker.io/library/busybox888:latest": failed to resolve reference "docker.io/library/busybox888:latest": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed
  Warning  Failed     62s (x4 over 2m32s)  kubelet            Error: ErrImagePull
  Warning  Failed     37s (x6 over 2m31s)  kubelet            Error: ImagePullBackOff
  Normal   BackOff    24s (x7 over 2m31s)  kubelet            Back-off pulling image "busybox888"


Name:             frontend-deployment-7b9984b987-8vlkm
Namespace:        default
Priority:         0
Service Account:  default
Node:             controlplane/192.7.181.3
Start Time:       Tue, 30 Apr 2024 04:59:47 +0000
Labels:           name=busybox-pod
                  pod-template-hash=7b9984b987
Annotations:      <none>
Status:           Pending
IP:               10.42.0.10
IPs:
  IP:           10.42.0.10
Controlled By:  ReplicaSet/frontend-deployment-7b9984b987
Containers:
  busybox-container:
    Container ID:  
    Image:         busybox888
    Image ID:      
    Port:          <none>
    Host Port:     <none>
    Command:
      sh
      -c
      echo Hello Kubernetes! && sleep 3600
    State:          Waiting
      Reason:       ImagePullBackOff
    Ready:          False
    Restart Count:  0
    Environment:    <none>
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-7cr97 (ro)
Conditions:
  Type                        Status
  PodReadyToStartContainers   True 
  Initialized                 True 
  Ready                       False 
  ContainersReady             False 
  PodScheduled                True 
Volumes:
  kube-api-access-7cr97:
    Type:                    Projected (a volume that contains injected data from multiple sources)
    TokenExpirationSeconds:  3607
    ConfigMapName:           kube-root-ca.crt
    ConfigMapOptional:       <nil>
    DownwardAPI:             true
QoS Class:                   BestEffort
Node-Selectors:              <none>
Tolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
Events:
  Type     Reason     Age                  From               Message
  ----     ------     ----                 ----               -------
  Normal   Scheduled  2m33s                default-scheduler  Successfully assigned default/frontend-deployment-7b9984b987-8vlkm to controlplane
  Normal   Pulling    63s (x4 over 2m33s)  kubelet            Pulling image "busybox888"
  Warning  Failed     62s (x4 over 2m32s)  kubelet            Failed to pull image "busybox888": failed to pull and unpack image "docker.io/library/busybox888:latest": failed to resolve reference "docker.io/library/busybox888:latest": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed
  Warning  Failed     62s (x4 over 2m32s)  kubelet            Error: ErrImagePull
  Warning  Failed     47s (x6 over 2m32s)  kubelet            Error: ImagePullBackOff
  Normal   BackOff    33s (x7 over 2m32s)  kubelet            Back-off pulling image "busybox888"

=> busybox888

===========================================================

9. Why do you think the deployment is not ready?

=> The image BUSYBOX888 doesn't exist

===========================================================

10. Create a new Deployment using the deployment-definition-1.yaml file located at /root/. There is an issue with the file, so try to fix it.

controlplane ~ ➜  nano deployment-definition-1.yaml 

controlplane ~ ➜ cat deployment-definition-1.yaml 
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment-1
spec:
  replicas: 2
  selector:
    matchLabels:
      name: busybox-pod
  template:
    metadata:
      labels:
        name: busybox-pod
    spec:
      containers:
      - name: busybox-container
        image: busybox888
        command:
        - sh
        - "-c"
        - echo Hello Kubernetes! && sleep 3600

controlplane ~ ➜ kubectl create -f deployment-definition-1.yaml 
deployment.apps/deployment-1 created



===========================================================

11. Create a new Deployment with the below attributes using your own deployment definition file.
	Name: httpd-frontend;
	Replicas: 3;
	Image: httpd:2.4-alpine

controlplane ~ ➜  nano deployment-definition-httpd.yaml 

controlplane ~ ➜  cat deployment-definition-httpd.yaml 
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: httpd-frontend
spec:
  replicas: 3
  selector:
    matchLabels:
      name: httpd-frontend
  template:
    metadata:
      labels:
        name: httpd-frontend
    spec:
      containers:
      - name: httpd-frontend
        image: httpd:2.4-alpine

controlplane ~ ➜  kubectl create -f deployment-definition-httpd.yaml 
deployment.apps/httpd-frontend created
