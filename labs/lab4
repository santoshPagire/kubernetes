1. How many Services exist on the system? In the current(default) namespace

controlplane ~ ➜  kubectl get services
NAME         TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE
kubernetes   ClusterIP   10.43.0.1    <none>        443/TCP   6m56s

=> 1

===========================================================

2. info - That is a default service created by Kubernetes at launch.

===========================================================

3. What is the type of the default kubernetes service?

=> ClusterIP

===========================================================

4. What is the targetPort configured on the kubernetes service?

controlplane ~ ➜  kubectl describe service
Name:              kubernetes
Namespace:         default
Labels:            component=apiserver
                   provider=kubernetes
Annotations:       <none>
Selector:          <none>
Type:              ClusterIP
IP Family Policy:  SingleStack
IP Families:       IPv4
IP:                10.43.0.1
IPs:               10.43.0.1
Port:              https  443/TCP
TargetPort:        6443/TCP
Endpoints:         192.15.229.9:6443
Session Affinity:  None
Events:            <none>

=> 6443

===========================================================



===========================================================

6. How many Endpoints are attached on the kubernetes service?

=> 1

===========================================================

7. How many Deployments exist on the system now? In the current(default) namespace

controlplane ~ ➜  kubectl get deployments
NAME                       READY   UP-TO-DATE   AVAILABLE   AGE
simple-webapp-deployment   4/4     4            4           33s

=> 1

===========================================================

8. What is the image used to create the pods in the deployment?

controlplane ~ ➜  kubectl describe deployment
Name:                   simple-webapp-deployment
Namespace:              default
CreationTimestamp:      Tue, 30 Apr 2024 09:02:59 +0000
Labels:                 <none>
Annotations:            deployment.kubernetes.io/revision: 1
Selector:               name=simple-webapp
Replicas:               4 desired | 4 updated | 4 total | 4 available | 0 unavailable
StrategyType:           RollingUpdate
MinReadySeconds:        0
RollingUpdateStrategy:  25% max unavailable, 25% max surge
Pod Template:
  Labels:  name=simple-webapp
  Containers:
   simple-webapp:
    Image:        kodekloud/simple-webapp:red
    Port:         8080/TCP
    Host Port:    0/TCP
    Environment:  <none>
    Mounts:       <none>
  Volumes:        <none>
Conditions:
  Type           Status  Reason
  ----           ------  ------
  Available      True    MinimumReplicasAvailable
  Progressing    True    NewReplicaSetAvailable
OldReplicaSets:  <none>
NewReplicaSet:   simple-webapp-deployment-7b447ccc74 (4/4 replicas created)
Events:
  Type    Reason             Age   From                   Message
  ----    ------             ----  ----                   -------
  Normal  ScalingReplicaSet  85s   deployment-controller  Scaled up replica set simple-webapp-deployment-7b447ccc74 to 4

=> kodekloud/simple-webapp:red

===========================================================

9. Are you able to accesss the Web App UI? Try to access the Web Application UI using the tab simple-webapp-ui above the terminal.

=> No

===========================================================

10. Create a new service to access the web application using the service-definition-1.yaml file.
Name: webapp-service
Type: NodePort
targetPort: 8080
port: 8080
nodePort: 30080
selector:
  name: simple-webapp

controlplane ~ ➜  nano  service-definition-1.yaml 

controlplane ~ ➜  cat service-definition-1.yaml 
---
apiVersion: v1
kind: Service
metadata:
  name: webapp-service
  namespace: default
spec:
  ports:
  - nodePort: 30080
    port: 8080
    targetPort: 8080 
  selector:
    name: simple-webapp
  type: NodePort

controlplane ~ ➜  kubectl create -f service-definition-1.yaml 
service/webapp-service created


===========================================================

11. info - Access the web application using the tab simple-webapp-ui above the terminal window.

=> works now!
